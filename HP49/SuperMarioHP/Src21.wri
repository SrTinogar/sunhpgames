HPHP48-R,*êÉ

%%%%%%%%%%%%%%%%%%%%%%
%
%  R.A.G.E. engine
%
%%%%%%%%%%%%%%%%%%%%%%

% R0/R1 FRONT BUFFER %
% R2    GFX PANEL    %

CPE=$800F5
DEFINE MAX.TORTLE $6
DEFINE MAX.LIFT   $4

DCCP 5 MX     
DCCP 5 MY
DCCP 5 LV
DCCP 2 JP
DCCP 5 M.ANIM
DCCP 5 TICK
DCCP 5 TICKC
DCCP 2 MCLIPH
DCCP 2 MCLIPB
DCCP 5 LV1
DCCP 1 SCR.C
DCCP 5 CUBES
DCCP 3 VIE
DCCP 5 POSX
DCCP 5 TX
DCCP 5 TY
DCCP 5 T.ANIM
DCCP 5 TORTLE
DCCP 3 COIN

SAVE
ST=0.15
A=DAT1.A
%TEST OBJET DS LA PILE
?A=0.A GOYES BAD
%TEST STRING          
D0=A A=DAT0.A
LC(5)$02A2C
?AãC.A GOYES BAD
%TEST TAILLE STRING   
D0+5 A=DAT0.A
LC(5)$01405
?A<C.A GOYES BAD
%OK TOUT VA BIEN..    
SKIP
{
 *BAD
 ST=1.15
 LOADRPL
}
%EFFACE STRING & SAVE 
D0+5 AD0EX D0=A R0=A.A
LC 13E A=0.W
{
 DAT0=A.W D0+16
 C-1.X UPNC
}
%POINTER ON PV BUFFY  
A=R0.A LC(5)$01400
A+C.A ABIT=0.0
D0=(5)LV DAT0=A.A
%PNTR ON TORT. BUF  
A=R0.A D0=(5)TORTLE
DAT0=A.A
%POINTER ON BACK BUFFY
A=R0.A LC(5)$00170 A+C.A
ABIT=0.0 R0=A.A
LC(5)$00880 A+C.A
R1=A.A
%GET GFX PANEL & SAVE 
D1+5 A=DAT1.A D0=A
D0+20 AD0EX R2=A.A
%GET LVL STRING DATAS 
D1+5 A=DAT1.A D0=A
D0+16 AD0EX
D0=(5)LV1 DAT0=A.A
%GET LVL GROB DATAS   
D1+5 A=DAT1.A D0=A
D0+10 D0+10 AD0EX
D0=(5)CUBES DAT0=A.A
%PLUS DE MENUS        
D1=00128
LC 3F DAT1=C.B
%PLUS D'INDICATEURS   
D1=0010C A=DAT1.P
ABIT=0.3 DAT1=A.P
%DOUBLE BUFFER STRING 
A=R0.A
D0=00120 DAT0=A.A
%VIE
LA 04
D0=(5)VIE DAT0=A.B
%COIN
A=0.X
D0=(5)COIN DAT0=A.X

%SCROLL X
A=0.B
D0=(5)POSX DAT0=A.B
GOLONG PRESENTATION

*REPLAY
%INITIALIZE GAME   
GOSUBL CL_TORTLE

ST=0.0  % JUMP MARIO
ST=0.1  % JM-UP/DOWN
ST=0.2  % KEY JUMP
ST=0.3  % LOST LIFE
ST=0.4  % SRC-ON/OFF
ST=0.5  % TORTOISE OFF
ST=0.6  % TOR-DIR
ST=0.7  % BIT DE DECAL
ST=0.8  % 1/2
ST=0.9  % CARAPACE OFF
ST=0.10 % POUSSE OFF
ST=0.11 % TESTG COIN..
ST=0.12 % MARIO/TORT?

% VARIABLE TEMPS
A=0.B
D0=(5)JP DAT0=A.B
% VARIABLE SCROL
A=0.P
D0=(5)SCR.C DAT0=A.P
GOSUBL DISP.COL.D
% POSITION MARIO
LC(2)#00 % X-MARIO
LA(2)#00 % Y-MARIO
D0=(5)MX DAT0=C.B
D0=(5)MY DAT0=A.B
% VARIABLE ANIM 
LA 01
D0=(5)M.ANIM DAT0=A.B
A=0.B
D0=(5)T.ANIM DAT0=A.B
% FPS 
LA(2)#06
D0=(5)TICK  DAT0=A.B
D0=(5)TICKC DAT0=A.B
% VARIABLE CLIP MARIO
A=0.B
D0=(5)MCLIPH DAT0=A.B
D0=(5)MCLIPB DAT0=A.B
%INITIALIZE DISPLAY
GOSUBL DISP.LEVEL
GOSUBL DISP.PANEL
GOSUBL VIES
GOSUBL COINS
GOSUBL FLIP

%MAIN GAME LOOP
{

 %DECALAGE DES OBJETS
 ST=0.7

 GOSUBL MARIO
 GOSUBL TORTUES
% GOSUBL GETCOIN
 GOSUBL FLIP

% LC 04000 { C-1.A UPNC }
   
 LC 010 OUT=C=IN
 ?CBIT=1.0 EXIT
 UP
}
{ GOSUBL KEYS UPC }
GOLONG PRESENTATION

*QUIT
P=0 SETHEX
%END GAME BACK RPL    
{ GOSUBL KEYS UPC }
LC 37
D0=00128 DAT0=C.P
%LES INDICATEURS      
D1=0010C A=DAT1.P
ABIT=1.3 DAT1=A.P
%LA MEMOIRE VIDEO     
D0=8068D A=DAT0.A
D0=00120 DAT0=A.A
ST=1.15
LOADRPL

*MARIO
% MARIOçBACK-BUFFER   

D0=(5)MCLIPB
C=DAT0.B D=C.B

% READ SPRITE 
A=R2.A C=0.A
D1=(5)M.ANIM C=DAT1.B
C+C.A C+C.A A+C.A
% SET CLIP UP   
C=0.A
D1=(5) MCLIPH C=DAT1.B
B=C.A CSL.A C+B.A
C+C.A A+C.A
R4=A.A

LC 09
?B<C.B
{
 GOTO BIG_CLIP
}
C-B.B B=C.B

% SET CLIP DOWN   
C=D.B
?CäB.B GOYES BIG_CLIP
B-C.B

A=0.A C=0.A
D0=(5)MX A=DAT0.B
D0=(5)MY C=DAT0.B
GOSUBL DISP.A.C.R4.B

*BIG_CLIP

%TEST DU DECOR
GOSUBL PIC

%MOVEMENTS FROM KEYS  

%SI ON A PERDU 1 VIE
?ST=1.3 GOYES YD

LC 040 OUT=C=IN
?CBIT=1.0 { GOTO ND }
*YD
 ?ST=1.3 GOYES AH
 GOSUBL MURD
 SKIPNC { GOTO ND }
 *AH
 D0=(5)MX A=DAT0.B
 LC 40 ?A<C.B 
 {
  %ON EST ARRIVE !
  ?ST=1.4 GOYES E
  GOSUBL SCROLG
 }
 SKELSE
 {
  *E
  LC 5F ?A<C.B
  {
   GOLONG CLEARED
  }
  A+1.B DAT0=A.B
 }
 % ANIMATION DROITE   
 D0=(5)TICKC A=DAT0.B
 ?A=0.B
 {
  A-1.B DAT0=A.B
 }
 SKELSE
 {
  D1=(5)TICK A=DAT1.B
  DAT0=A.B
  % FRAME 
  D0=(5)M.ANIM A=DAT0.B
  LC 04 ?AäC.B
  { A+1.B }
  SKELSE
  { LA 01 }
  DAT0=A.B
 }
*ND
%TEST GAUCHE          
LC 040 OUT=C=IN
?CBIT=1.2 { GOTO NG }
*YG
 ?ST=1.3 GOYES AI
 GOSUBL MURG
 SKIPNC { GOTO NG }
 *AI
 D0=(5)MX A=DAT0.B
 ?Aã0.B { GOTO NG }
 A-1.B DAT0=A.B
 % ANIMATION GAUCHE   
 D0=(5)TICKC A=DAT0.B
 ?A=0.B
 {
  A-1.B DAT0=A.B
 }
 SKELSE
 {
  D1=(5)TICK A=DAT1.B
  DAT0=A.B
  % FRAME 
  D0=(5)M.ANIM A=DAT0.B
  LC 01 ?AâC.B
  { A-1.B }
  SKELSE
  { LA 04}
  DAT0=A.B
 }

*NG
%NO MOVEçSTAND-BY     
GOSUBL KEYS
SKIPC
{
 A=0.B
 D0=(5)M.ANIM DAT0=A.B
}
% JUMPING 
LC 040 OUT=C=IN
?CBIT=0.4
{
 %DEJA PRESSED 
 ?ST=1.2 EXIT
 ST=1.2
 %DEJA ON AIR  
 ?ST=1.0 EXIT
 ?ST=1.3 EXIT
 GOSUBL SOL
 EXITNC
 ST=1.0
 %SAUT OU CHUTE
 ST=1.1
 A=0.B
 D0=(5)JP DAT0=A.B
}
SKELSE
{
 ST=0.2
}
%ON GERE LE SAUT/CHUTE
?ST=1.0
{
 ?ST=1.3 GOYES AC
 GOSUBL SOL
 SKIPC
 {
  *AC
  ST=1.0
  %SAUT OU CHUTE
  ST=0.1
  LA 08
  D0=(5)JP DAT0=A.B
 }
}
SKELSE
{
 GOSUBL JUMPING
}
% TEST LOST %%%%%%%%%%
{
 D0=(5)MCLIPB A=DAT0.B
 LC 09
 ?A<C.B EXIT
 GOLONG MLOST
}
RTN

*FLIP
%BACK-BUFFYçFRONT-BUFY
A=R1.A
D0=00120 DAT0=A.A
%WAIT VBL
A=0.W P=5
{
 D0=00128 A=DAT0.WP
 ?A=0.W EXIT
 UP
}
P=0
%CLEAR NEW BACK-BUFFY 
D0=(5)LV A=DAT0.A
D1=A A=R0.A D0=A LC 3F
{
 A=DAT1.W DAT0=A.W
 D0+16 D1+16
 A=DAT1.10 DAT0=A.10
 D0+18 D1+18
 C-1.B UPNC
}
%FLIP VIDEO POINTERS  
A=R0.A C=R1.A
R1=A.A R0=C.A
RTN

*JUMPING
%MARIO SE POSE?
?ST=1.1
{
 ?ST=1.3 EXIT
 GOSUBL SOL
 EXITNC
 ST=0.0
 % REAJUSTE MY
 GOSUBL FIXSOL
 RTN
}
SKELSE
{
%MARIO SE COGNE? 
 ?ST=1.3 EXIT
 GOSUBL CIEL
 EXITNC
 ST=0.0
 % REAJUSTE MY
 GOSUBL FIXCIEL
 RTN
}
*AK
% EQS VALUES 
SKUB
{
 $/05 $/05 $/04
 $/03 $/03 $/02
 $/01 $/01 $/01
 $/00 $/00 $/00
}
C=RSTK A=0.A
D0=(5)JP A=DAT0.B
A+A.A C+A.A D0=C
C=0.A C=DAT0.B
%MOVE SPRITE          
D0=(5)MY A=DAT0.B
?ST=1.1
{
 D=C.B
 D1=(5)MCLIPH C=DAT1.B
 ?C=0.B
 {
  ?C>D.B
  {
   C=0.B DAT1=C.B
   D-C.B C=D.B
   A+C.B DAT0=A.B  
  }
  SKELSE
  {
   C-D.B DAT1=C.B 
  }
 }
 SKELSE
 {
  C=D.B
  A+C.B
 }
}
SKELSE
{
 ?C>A.B
 {
  A-C.B
 }
 SKELSE
 {
  D1=(5)MCLIPH A=DAT1.B
  A+C.B DAT1=A.B
  A=0.B
 }
}
%CLIPPING UP&DOWN 
LC 40 ?AâC.B
{ A=C.B }
LC 36 ?AâC.B
{
 B=C.B C=A.B
 C-B.B
 D1=(5)MCLIPB DAT1=C.B
}
DAT0=A.B
%UPDATE JUMP
D0=(5)JP A=DAT0.B
%SAUT OU CHUTE
?ST=0.1
{
 LC(2)#11 ?AãC.B
 { ST=0.0 }
 SKELSE
 { A+1.B DAT0=A.B }
}
SKELSE
{
 ?A=0.B ç 
 {
  %PAS DE SOL ç CHUTE
  ?ST=1.3 EXIT
  GOSUBL SOL 
  EXITNC
  ST=0.0
  % REAJUSTE MY
  GOSUBL FIXSOL
 }
 SKELSE
 {
  A-1.B DAT0=A.B
 }
}
RTN
 
*TEST_SOL.A.C.B

D=C.A
C=B.A RSTK=C
B=A.A

% ON TOMBEçPLUS DE SOL
D0=(5)MCLIPB A=DAT0.B
?Aã0.B ç
{
 C=RSTK
 RTNCC
}
D0=(5)MY A=DAT0.B
LC 36
?AäC.B ç
{
 C=RSTK
 RTNCC
}

C=D.A
%LVL         
A=C.A CSL.A C+A.A
C+C.A
D0=(5)LV A=DAT0.A
A+C.A C=B.A
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE SOL
C=RSTK 

A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
?Aã0.B
{ RTNCC } RTNSC

*FIX_SOL
D0=(5)MCLIPH A=DAT0.B
LC 0A ?A>C.B RTNYES

C=0.A
% ON LIT DS LVL       
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
C+9.A %TAILLE MARIO
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE SOL
A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
?Aã0.B { RTNCC } RTNSC

*MLOST
C=RSTK C=RSTK
GOSUBL FLIP

D0=(5)VIE A=DAT0.B
?Aã0.B ç
{
 A-1.B
 DAT0=A.B
}
SKELSE
{
 %GAME-OVER
 GOLONG QUIT
}

%ON SE REMET AU DEBUT
A=0.A C=0.A
D1=(5)LV1
D0=(5)POSX A=DAT0.B
LC 40 ?A<C.B
{
 DAT0=C.B
 A+A.A C=DAT1.A
 C-A.A LA(5)$40 A+A.A
 C+A.A DAT1=C.A
}
SKELSE
{
 C=0.A DAT0=C.B
 A+A.A C=DAT1.A
 C-A.A DAT1=C.A
}

GOLONG REPLAY

*TEST_MUR.A.C.B
%SI ON PERD UNE VIE
%?ST=1.3 ç { RTNCC }

D=C.A
C=B.A RSTK=C
B=A.A
C=D.A
%LVL         

A=C.A CSL.A C+A.A
C+C.A
D0=(5)LV A=DAT0.A
A+C.A C=B.A
D=C.P CSRB.A CSRB.A
A+C.A D0=A
C=RSTK B=C.P C=D.P
%ON REGARDE LE MUR
B-1.P
{
 A=DAT0.X
 ?CBIT=1.0 ç { ASRB.X }
 ?CBIT=1.1 ç { ASRB.X ASRB.X }
 ?ABIT=1.0 ç { RTNSC }
 D0+34 B-1.P UPNC
}
RTNCC

*TEST_PLAFOND
% çPLUS DE FLAFOND? 
D0=(5)MCLIPH A=DAT0.B
?Aã0.B ç { RTNCC }
D0=(5)MY A=DAT0.B
?A=0.B ç { RTNCC }

C=0.A
%LVL         
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
C+1.A
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE PLAFOND
A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
%SI ON A PERDU 1 VIE
?ST=1.3 ç { RTNCC }
?Aã0.B { RTNCC } RTNSC

*FIX_PLAFOND
A=0.A B=0.A C=0.A
%LVL         
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
C+2.A
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE PLAFOND
A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
?Aã0.B { RTNCC } RTNSC

*DISP.LEVEL
D0=(5)LV A=DAT0.A
R4=A.A

LC(2)#13 D=C.B % X
LC(2)#08 B=C.B % Y

D0=(5)LV1 A=DAT0.A
D0=A
CD0EX RSTK=C D0=C

*BCL

A=0.A A=DAT0.B
%SI CEST MARIO 
LC(2)#25 ?AãC.B
{
 LA(2)#13 C=D.B A-C.B
 ASL.A ASRB.A
 D0=(5)MX DAT0=A.B

 LA(2)#08 C=B.B A-C.B
 ASL.A ASRB.A A-2.B
 D0=(5)MY DAT0=A.B
 A=0.A
 GOTO NODISP
}
%SI CEST UNE TORTUE 
LC(2)#26 ?AãC.B
{
 GOSUBL ADD_TORTUE
 A=0.A
 GOTO NODISP
}

*NODISP
D1=(5)CUBES C=DAT1.A
ASL.A A+A.A
C+A.A D1=C

A=R4.A D0=A
LC 7
{
 A=DAT1.B DAT0=A.B
 D0+34 D1+4 C-1.P
 UPNC
}

A=R4.A A+2.A R4=A.A
C=RSTK C+2.A RSTK=C
D0=C

D-1.B
?Dã0.B ç
{ GOTO BCL }

LC(2)#13 D=C.B

C=RSTK
LA 00140 C+A.A
C-16.A C-10.A
RSTK=C D0=C

A=R4.A A-16.A A-10.A
LC 00110 A+C.A R4=A.A

B-1.B ?Bã0.B ç { GOTO BCL }
C=RSTK
RTN

*DISP.COL.D
D0=(5)LV C=DAT0.A
C+16.A C+10.A D=C.A
LC(2)#07 B=C.B % Y

D0=(5)LV1 A=DAT0.A
D0=A D0+16 D0+10
CD0EX RSTK=C
{
 D0=C
 A=0.A A=DAT0.B
 LC(2)#26 ?AãC.B
 {
  GOSUBL ADD2_TORTUE
  A=0.A
  GOTO NODISP2
 }
 *NODISP2
 D1=(5)CUBES C=DAT1.A
 ASL.A A+A.A
 C+A.A D1=C
 C=D.A D0=C LC 7
 {
  A=DAT1.B DAT0=A.B
  D0+34 D1+4 C-1.P
  UPNC
 }
 LC 00110 D+C.A
 
 C=RSTK
 LA 00140 C+A.A
 RSTK=C
 B-1.B UPNC
}
C=RSTK
RTN

*SCROLG
% POUR LES OBJETS
ST=1.7
%UN POINTER SUR COLONE
D0=(5)LV A=DAT0.A D0=A
LC 3F
{
 A=DAT0.W ASRB.W DAT0=A.15
 D0+15 A=DAT0.14 ASRB.W
 DAT0=A.13
 D0+19
 C-1.B UPNC
}
%ON COMPTE LES SCROLS 
D0=(5)SCR.C A=DAT0.P
LC 7 ?A=C.P
{
 A+1.P DAT0=A.P
}
SKELSE
{ 
%UNE NOUVELLE COLONNE 
 A=0.P DAT0=A.P

 D0=(5)POSX A=DAT0.B
 LC 92 ?A<C.B
 {
  ST=1.4
  D0=(5)SCR.C
  LC 8 DAT0=C.P
 }
 SKELSE
 {
  A+1.B DAT0=A.B
  D0=(5)LV1 A=DAT0.A
  A+2.A DAT0=A.A
 }
 GOSUBL DISP.COL.D
}
RTN

*DISP.PANEL
C=R2.A C+16.A C+10.A
D=C.A D1=C
A=R0.A
A+16.A A+10.A D0=A
LC 3F
{
 A=DAT1.8 DAT0=A.8
 D0+34 D1+34
 C-1.B UPNC
}
C=D.A D1=C
A=R1.A
A+16.A A+10.A D0=A
LC 3F
{
 A=DAT1.8 DAT0=A.8
 D0+34 D1+34
 C-1.B UPNC
}
RTN

*PIC
LC(5)#08 %10
LA(5)#00
GOSUBL GET_BLOC.A

LC 04 ?A=C.B ç
{
 GOSUBL LOST_LIFE
}
RTN

*GET_BLOC.A
B=A.A D=C.A
A=0.A
D0=(5)MCLIPH A=DAT0.B
?A=0.B { C=RSTK RTN }
?ST=0.3 { C=RSTK RTN }
?ST=0.0 { C=RSTK RTN }

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)MY C=DAT0.B
C+D.A
CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)MX A=DAT0.B
A+B.A A+4.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
RTN

*NUMBER.AC
?C=0.P RTNYES

% A/B=NUMBER C/D=SIZE 
% R4.A = POS          

B=A.W
D=C.P
C=0.A C=D.P C-1.A
A=R4.A A+C.A R4=A.A
%FONT DS TABLE SPRITES
A=R2.A
LC 00176 A+C.A
R3=A.A

{
 ?D=0.P EXIT
 C=R3.A
 A=0.A A=B.P
 C+A.A D1=C

 A=R4.A D0=A LC 5
 {
  A=DAT1.P DAT0=A.P
  D1+34 D0+34 C-1.P
  UPNC
 }
 C=R4.A C-1.A R4=C.A
 BSR.W D-1.P UP
}
RTN

*TORTUES
C=0.A R3=C.A
LC(1)MAX.TORTLE
{
 RSTK=C
 C=R3.A
 GOSUBL LOAD_T SKIPC
 {
  GOSUBL TORTUE
  C=R3.A 
  GOSUBL SAVE_T
 }
 C=R3.A C+6.A R3=C.A
 C=RSTK ?C=0.P EXIT
 C-1.P
 UP
}

RTN

*DISP.A.C.R4.B
D=C.A
C=B.B RSTK=C
B=A.A
C=D.A
% D0 POINTER ON SCREEN
A=C.A CSL.A C+A.A
C+C.A
A=R1.A A+C.A C=B.A
D=C.A CSRB.A CSRB.A
A+C.A D0=A
% D1 POINTER ON SPRITE
A=R4.A D1=A
% AFFICHAGE SPRITE  
C=RSTK B=C.B
{
 A=0.X
 D1+2
 A=DAT1.B
 C=D.P
 ?CBIT=1.0 ç { A+A.X }
 ?CBIT=1.1 ç { A+A.X A+A.X }
 A=-A-1.X
 C=DAT0.X
 C&A.X
 RSTK=C
 D1-2
 A=0.X
 A=DAT1.B
 C=D.P
 ?CBIT=1.0 ç { A+A.X }
 ?CBIT=1.1 ç { A+A.X A+A.X }
 C=RSTK
 A!C.X
 DAT0=A.X

 D0+34 D1+34
 B-1.P UPNC
}
RTN

*CLEARED
LOAD
D1+5 D+1.A
SAVE
GOLONG QUIT

*ADD_TORTUE
%FIND PLACE
D0=(5)TORTLE
A=DAT0.A D0=A

C=0.P
{
 LA(1)MAX.TORTLE
 ?C=A.P RTNYES
 A=DAT0.P ?A=0.P EXIT
 D0+6 C+1.P UP
}

LC 1 DAT0=C.P D0+1
%CALCUL POSITION

LA(2)#13 C=D.B A-C.B
ASL.A ASRB.A
DAT0=A.B D0+2

LA(2)#08 C=B.B A-C.B
ASL.A ASRB.A 
DAT0=A.B D0+2

RTN

*ADD2_TORTUE
%FIND PLACE
D0=(5)TORTLE
A=DAT0.A D0=A

C=0.P
{
 LA(1)MAX.TORTLE
 ?C=A.P RTNYES
 A=DAT0.P ?A=0.P EXIT
 D0+6 C+1.P UP
}

LC 1 DAT0=C.P D0+1
%CALCUL POSITION

LA(2)#13
ASL.A ASRB.A
DAT0=A.B D0+2

LA(2)#07 C=B.B A-C.B
ASL.A ASRB.A
DAT0=A.B D0+2

RTN

*TORTUE
?ST=1.7 { GOTO NDT } 
%ON SCROL LA TORTUE
D0=(5)TX A=DAT0.B
?Aã0.B
{
 ST=0.5 % DEAD TORT.
}
SKELSE
{
 A-1.B DAT0=A.B
}
*NDT
% READ SPRITE 
A=R2.A LC 00264
A+C.A
%MODE CARAPACE
?ST=1.9 ç { A+8.A }
SKELSE
{
 %GAUCHE OU DROITE?
 ?ST=0.6 { A+4.A }
}
%C=0.A
%D1=(5)T.ANIM C=DAT1.B
%C+C.A C+C.A A+C.A
R4=A.A

LC 07 B=C.B

A=0.A C=0.A
D0=(5)TX A=DAT0.B
LC 60 ?A>C.B
{
 D0=(5)TY C=DAT0.B
 GOSUBL DISP.A.C.R4.B
}
% LOOK AROUND MARIO

D0=(5)TX A=DAT0.B
D0=(5)MX C=DAT0.B
{
 C+4.B ?C<A.B EXIT
 A+8.B ?C>A.B EXIT
 D0=(5)TY A=DAT0.B
 D0=(5)MY C=DAT0.B
 C+8.B ?C<A.B EXIT
 C-8.B ?C>A.B EXIT
 
 C+6.B
 ?C<A.B
 {
  ?ST=1.0 GOYES AA
  ?ST=1.9 ç
  { ?ST=0.10 GOYES AA }
  %MARIO MORDU
  GOSUBL LOST_LIFE
  EXIT2
 }
 SKELSE
 {
  %TORTUE FRAPPEE
  *AA
  GOSUBL TORTLE_HIT
 }
}

{
 ?ST=0.9 EXIT
 ?ST=1.10 EXIT
 RTN
}

% MOVE TORTUE %%%%%%%%

?ST=1.10
{
 ?ST=0.8 RTNYES
}

?ST=0.6
{
 %VERS LA DROITE
 GOSUBL MURD_T
 SKIPNC
 {
  ST=0.6 EXIT2
 }
 D0=(5)TX A=DAT0.B
% LC 5F ?A<C.B
% {
%  ST=0.6 EXIT2
% }
 A+1.B
 DAT0=A.B
}
SKELSE
{
 %VERS LA GAUCHE
 GOSUBL MURG_T
 SKIPNC
 {
  ST=1.6 EXIT2
 }
 D0=(5)TX A=DAT0.B
 ?Aã0.B
 {
  ST=1.6 EXIT2
 }
 A-1.B
 DAT0=A.B
}
?ST=0.10
{
 GOSUBL SOL_T
 SKIPC
 {
  D0=(5)TY A=DAT0.B
  LC 37 ?AäC.B ç
  {
   ST=0.5 %DEATH
  }
  SKELSE
  {
   A+1.B DAT0=A.B
  }
 }
 GOTO CHUTE
}
%PAS DE CHUTE
?ST=0.6
{
 GOSUBL SOL_T
 SKIPC
 {
  ST=0.6
 }
}
SKELSE
{
 GOSUBL SOL_T
 SKIPC
 {
  ST=1.6
 }
}
*CHUTE
RTN

*LOAD_T
D0=(5)TORTLE
A=DAT0.A A+C.A D0=A
A=DAT0.P ?Aã0.P
{
 ST=0.5 RTNSC
}
ST=1.5

ST=0.9 ST=0.10
LC 1 ?AãC.P { ST=0.6 }
LC 2 ?AãC.P { ST=1.6 }
LC 3 ?AãC.P { ST=1.9 }
LC 4 ?AãC.P { ST=0.6 ST=1.9 ST=1.10 } 
LC 5 ?AãC.P { ST=1.6 ST=1.9 ST=1.10 } 

D0+1 D1=(5)TX
A=DAT0.B DAT1=A.B
D0+2 D1=(5)TY
A=DAT0.B DAT1=A.B 
D0+2 A=DAT0.P
?A=0.P { ST=0.8 }
SKELSE { ST=1.8 }
RTNCC

*SAVE_T
D0=(5)TORTLE
A=DAT0.A A+C.A D0=A
?ST=1.5
{
 %TORTLE DEATH
 C=0.P
}
SKELSE
{
 ?ST=1.6
 {
  LC 1
 }
 SKELSE
 {
  LC 2
 }
 %MODE CARAPACE
 ?ST=1.10 ç { C+3.P EXIT2 }
 ?ST=1.9 ç { LC 3 }

}
DAT0=C.P
D0+1 D1=(5)TX
A=DAT1.B DAT0=A.B
D0+2 D1=(5)TY
A=DAT1.B DAT0=A.B 
D0+2
?ST=0.8 ç { A=0.P }
SKELSE { LA 1 }
DAT0=A.P
RTN

*CL_TORTLE
D0=(5)TORTLE
A=DAT0.A D0=A
C=0.W
LA(1)MAX.TORTLE
{
 ?A=0.P EXIT
 A-1.P
 DAT0=C.6 D0+6
 UP
}
RTN

*TORTLE_HIT
?ST=1.9
{
 %APPLATIE
 ST=1.9
}
SKELSE
{
 ST=1.10
 %POUSSEE: SENS ?
 D0=(5)TX A=DAT0.B
 D0=(5)MX C=DAT0.B
 ?A>C.B
 {
  ST=0.6
 }
 SKELSE
 {
  ST=1.6
 }
}
%MARIO REBONDIT
?ST=1.3 RTNYES
ST=1.0
ST=1.1
LA 02
D0=(5)JP DAT0=A.B
RTN

*LOST_LIFE
?ST=1.3 RTNYES
LC 08000 { C-1.A UPNC }
ST=1.3

ST=1.0
ST=1.1
A=0.B
D0=(5)JP DAT0=A.B
RTN

*KEYS
LC 1FF
OUT=C=IN
?C=0.B { RTNSC }
RTNCC

*SOL
ST=1.12
ST=0.11

D0=(5)MCLIPB A=DAT0.B
?A=0.B { RTNCC }

D0=(5)MCLIPH A=DAT0.B
LC 0A ?AâC.B { RTNCC }

LC(5)#10
A=0.A
D0=(5)MCLIPH A=DAT0.B
C-A.A

A=0.A D0=(5)SCR.C
A=DAT0.P A+4.A

B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)MY C=DAT0.B
C+D.A

CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)MX A=DAT0.B
A+B.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
GOLONG TESTING_DW

*FIXSOL
 D0=(5)MY A=DAT0.B
 A+2.B
 ASRB.B ASRB.B ASRB.B
 ASL.A ASRB.A
 A-2.B
 DAT0=A.B
RTN

*FIXCIEL
 D0=(5)MY A=DAT0.B
 A+8.B
 ASRB.B ASRB.B ASRB.B
 ASL.A ASRB.A
 A-2.B
 DAT0=A.B
RTN

*MURD
ST=1.12
ST=0.11

A=0.A D0=(5)SCR.C
A=DAT0.P A+8.A

LC(5)#03

B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)MY C=DAT0.B
C+D.A
CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)MX A=DAT0.B
A+B.A %A+4.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
GOLONG TESTING_UP

*MURG
ST=1.12
ST=1.11

D0=(5)MX A=DAT0.B
LC 01 ?A<C.B ç { RTNCC }

A=0.A D0=(5)SCR.C
A=DAT0.P

LC(5)#03

B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)MY C=DAT0.B
C+D.A
CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)MX A=DAT0.B
A+B.A A-1.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
GOLONG TESTING_UP

*SOL_T
ST=0.12
ST=0.11

LC(5)#08

A=0.A D0=(5)SCR.C
A=DAT0.P A+4.A

B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)TY C=DAT0.B
C+D.A

CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)TX A=DAT0.B
A+B.A %A+4.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
GOLONG TESTING_DW

*MURD_T
ST=0.12
ST=0.11

A=0.A D0=(5)SCR.C
A=DAT0.P A+8.A

LC(5)#00

B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)TY C=DAT0.B
C+D.A
CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)TX A=DAT0.B
A+B.A %A+4.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
GOLONG TESTING_UP

*MURG_T
ST=0.12
ST=0.11

D0=(5)TX A=DAT0.B
LC 01 ?A<C.B ç { RTNCC }

A=0.A D0=(5)SCR.C
A=DAT0.P

LC(5)#00

B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)TY C=DAT0.B
C+D.A
CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)TX A=DAT0.B
A+B.A A-1.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
GOLONG TESTING_UP


*TESTING_DW

LC(2)#09 ?A>C.B ç { GOTO DIX }
LC(2)#19 ?A>C.B ç { GOTO VINGT }
LC(2)#29 ?A>C.B ç { GOTO TRENTE }

LC(2)#01 ?AãC.B { RTNSC }
LC(2)#02 ?AãC.B { RTNSC }
LC(2)#03 ?AãC.B { RTNSC }
%LC(2)#04 ?AãC.B { RTNSC }
LC(2)#05 ?AãC.B { RTNSC }
LC(2)#06 ?AãC.B { RTNSC }
LC(2)#07 ?AãC.B { GOLONG COINUP }
LC(2)#09 ?AãC.B { RTNSC }
*DIX
LC(2)#10 ?AãC.B { RTNSC }
LC(2)#11 ?AãC.B { RTNSC }
LC(2)#18 ?AãC.B { RTNSC }
LC(2)#19 ?AãC.B { RTNSC }
*VINGT
LC(2)#20 ?AãC.B { RTNSC }
LC(2)#21 ?AãC.B { RTNSC }
LC(2)#23 ?AãC.B { RTNSC }
LC(2)#24 ?AãC.B { RTNSC }
LC(2)#27 ?AãC.B { RTNSC }
LC(2)#28 ?AãC.B { RTNSC }
LC(2)#29 ?AãC.B { RTNSC }
*TRENTE
LC(2)#37 ?AãC.B { RTNSC }
LC(2)#38 ?AãC.B { RTNSC }
LC(2)#39 ?AãC.B { RTNSC }
LC(2)#40 ?AãC.B { RTNSC }
LC(2)#43 ?AãC.B { RTNSC }

RTNCC

*TESTING_UP
LC(2)#01 ?AãC.B { RTNSC }
LC(2)#02 ?AãC.B { RTNSC }
LC(2)#03 ?AãC.B { RTNSC }
LC(2)#05 ?AãC.B { RTNSC }
LC(2)#06 ?AãC.B { RTNSC }
LC(2)#07 ?AãC.B { GOLONG COINUP }
LC(2)#23 ?AãC.B { RTNSC }
LC(2)#24 ?AãC.B { RTNSC }

LC(2)#37 ?AãC.B { RTNSC }
LC(2)#38 ?AãC.B { RTNSC }
LC(2)#39 ?AãC.B { RTNSC }
LC(2)#40 ?AãC.B { RTNSC }
LC(2)#43 ?AãC.B { RTNSC }

RTNCC


*CIEL
ST=1.12
ST=0.11

D0=(5)MCLIPH A=DAT0.B
?A=0.B { RTNCC }

A=0.A D0=(5)SCR.C
A=DAT0.P A+4.A
C=0.A
B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)MY C=DAT0.B
C+D.A

CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)MX A=DAT0.B
A+B.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
GOLONG TESTING_UP

*VIES
 A=R0.A
 LC 00193 A+C.A
 R4=A.A
 D0=(5)VIE A=DAT0.B
 LC 2
 GOSUBL NUMBER.AC

 A=R1.A
 LC 00193 A+C.A
 R4=A.A
 D0=(5)VIE A=DAT0.B
 LC 2
 GOLONG NUMBER.AC

*COINS
 A=R0.A
 LC 0045C A+C.A
 R4=A.A
 D0=(5)COIN A=DAT0.X
 LC 3
 GOSUBL NUMBER.AC

 A=R1.A
 LC 0045C A+C.A
 R4=A.A
 D0=(5)COIN A=DAT0.X
 LC 3
 GOLONG NUMBER.AC

*GETCOIN
D0=(5)MCLIPB A=DAT0.B
?A=0.B { RTNCC }

D0=(5)MCLIPH A=DAT0.B
LC 0A ?AâC.B { RTNCC }

LC(5)#2
%A=0.A
%D0=(5)MCLIPH A=DAT0.B
%C-A.A

A=0.A D0=(5)SCR.C
A=DAT0.P A+4.A

B=A.A D=C.A

% (Y/8)*320+(X/8)*2 
C=0.A
D0=(5)MY C=DAT0.B
C+D.A

CSRB.A CSRB.A CSRB.A
CSL.A A=C.A CSL.A
A+A.A A+A.A C+A.A

A=0.A
D0=(5)MX A=DAT0.B
A+B.A %A+4.A
ASRB.A ASRB.A ASRB.A
A+A.A C+A.A

% ON LIT LE CUBE   
D0=(5)LV1 A=DAT0.A
A+C.A D0=A A=DAT0.B
LC 07 ?AãC.B RTNYES

%CLS IN STRING
A=0.B DAT0=A.B
%CLEAR COIN
C=0.A
D0=(5)MY C=DAT0.B
C+2.A

CSRB.A CSRB.A CSRB.A
CSL.A CSRB.A

A=C.A CSL.A C+A.A
C+C.A
D0=(5)LV A=DAT0.A
A+C.A C=0.A
B=A.A A=0.A
D0=(5)MX C=DAT0.B
D0=(5)SCR.C A=DAT0.P
A+4.A C+A.A A=B.A 

CSRB.A CSRB.A CSRB.A
C+C.A

A+C.A
D0=A A=0.B LC 7
{
 DAT0=A.B
 D0+34
 C-1.P UPNC
}
GOTO COINUP

*COINUP
%SORTUE ?
?ST=1.12 { RTNCC }

%CLS IN STRING
A=0.B DAT0=A.B
%CLEAR COIN
C=0.A
D0=(5)MY C=DAT0.B
C+D.A

CSRB.A CSRB.A CSRB.A
CSL.A CSRB.A

A=C.A CSL.A C+A.A
C+C.A
D0=(5)LV A=DAT0.A
A+C.A C=0.A
D0=(5)MX C=DAT0.B
C+B.A

?ST=0.11
{
 C-1.A ST=0.11
}

CSRB.A CSRB.A CSRB.A
CSL.A CSRB.A

B=A.A
D0=(5)SCR.C 
A=0.A A=DAT0.P
C-A.A D=C.P
A=B.A

CSRB.A CSRB.A A+C.A
D0=A

SKUB {
$FF00
} C=RSTK D1=C

 LC 7 B=C.P
{
 A=DAT1.X
 C=D.P
 ?CBIT=0.0 { A+A.X }
 ?CBIT=0.1 { A+A.X A+A.X }
 A=-A-1.X
 C=DAT0.X
 A&C.X
 DAT0=A.X
 D0+34
 B-1.P UPNC
}

D0=(5)COIN A=DAT0.X
LC 99
?A<C.B
{
 A=0.X DAT0=A.X
 D0=(5)VIE A=DAT0.B
 SETDEC A+1.B SETHEX
 DAT0=A.B
 GOSUBL COINS
 GOSUBL VIES
 RTNCC
} 
SETDEC A+1.X SETHEX

DAT0=A.X
GOSUBL COINS
RTNCC

*PRESENTATION
SKUBL {
INCLUDE PRE
} C=RSTK C+20.A R4=C.A
*PRES
A=0.W
{
 D0=(5) $00128
 A=DAT0 6
 ?A#0 W UP
}
A=R4.A D1=A
GOSUBL AF
A=0.W
{
 D0=(5) $00128
 A=DAT0 6
 ?A#0 W UP
}
A=R4.A
LC 00880 A+C.A D1=A
GOSUBL AF
A=0.W
{
 D0=(5) $00128
 A=DAT0 6
 ?A#0 W UP
}
A=R4.A
LC 00880 A+C.A D1=A
GOSUBL AF

%TEST LA TOUCHE ENTER
LC 010 OUT=C=IN
?CBIT=0.4
{
 GOLONG REPLAY
}

%TEST LA TOUCHE DROP
LC 010 OUT=C=IN ?CBIT=0.0
{
 GOLONG QUIT 
}
GOTO PRES

*AF
A=R0.A D0=A LC 87
{
 A=DAT1.W DAT0=A.W
 D0+16 D1+16
 C-1.B UPNC
}
RTN

@