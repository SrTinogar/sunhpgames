HPHP48-R,*∞Ë
% R0/R1 FRONT BUFFER %
% R2    GFX PANEL    %
% MARIO2 SOURCE CODE %

DEFINE MX     $800F5
DEFINE MY     $800F7
DEFINE LV     $800F9
DEFINE JP     $800FE
DEFINE M.ANIM $80100
DEFINE TICK   $80102
DEFINE TICKC  $80104
DEFINE MCLIPH $80106
DEFINE MCLIPB $80108
DEFINE LV1    $8010A
DEFINE SCR.C  $8010F
DEFINE CUBES  $80110

SAVE
ST=0.15
A=DAT1.A
%TEST OBJET DS LA PILE
?A=0.A GOYES BAD
%TEST STRING          
D0=A A=DAT0.A
LC(5)$02A2C
?AãC.A GOYES BAD
%TEST TAILLE STRING   
D0+5 A=DAT0.A
LC(5)$01405
?A<C.A GOYES BAD
%OK TOUT VA BIEN..    
SKIP
{
 *BAD
 ST=1.15
 LOADRPL
}
%EFFACE STRING & SAVE 
D0+5 AD0EX D0=A R0=A.A
LC 13E A=0.W
{
 DAT0=A.W D0+16
 C-1.X UPNC
}
%POINTER ON PV BUFFY  
A=R0.A LC(5)$01400
A+C.A ABIT=0.0
D0=(5)LV DAT0=A.A
%POINTER ON BACK BUFFY
A=R0.A LC(5)$00170 A+C.A
ABIT=0.0 R0=A.A
LC(5)$00880 A+C.A
R1=A.A
%GET GFX PANEL & SAVE 
D1+5 A=DAT1.A D0=A
D0+20 AD0EX R2=A.A
%GET LVL STRING DATAS 
D1+5 A=DAT1.A D0=A
D0+16 AD0EX
D0=(5)LV1 DAT0=A.A
%GET LVL GROB DATAS   
D1+5 A=DAT1.A D0=A
D0+10 D0+10 AD0EX
D0=(5)CUBES DAT0=A.A
%PLUS DE MENUS        
D1=00128
LC 3F DAT1=C.B
%PLUS D'INDICATEURS   
D1=0010C A=DAT1.P
ABIT=0.3 DAT1=A.P
%DOUBLE BUFFER STRING 
A=R0.A
D0=00120 DAT0=A.A

*REPLAY
%INITIALIZE DISPLAY
GOSUBL DISP.LEVEL
GOSUBL DISP.PANEL
%INITIALIZE GAME   
ST=0.0 % JUMP MARIO
ST=0.1 % JM-UP/DOWN
ST=0.2 % KEY JUMP

% VARIABLE TEMPS
A=0.B
D0=(5)JP DAT0=A.B
% VARIABLE SCROL
A=0.P
D0=(5)SCR.C DAT0=A.P
GOSUBL DISP.COL.D
% POSITION MARIO
LC(2)#03 % X-MARIO
LA(2)#00 % Y-MARIO
D0=(5)MX DAT0=C.B
D0=(5)MY DAT0=A.B
% VARIABLE ANIM MARIO
LA 01
D0=(5)M.ANIM DAT0=A.B
LA(2)#06
D0=(5)TICK  DAT0=A.B
D0=(5)TICKC DAT0=A.B
% VARIABLE CLIP MARIO
A=0.B
D0=(5)MCLIPH DAT0=A.B
D0=(5)MCLIPB DAT0=A.B

%MAIN GAME LOOP
{
 GOSUBL MARIO
 GOSUBL FLIP
 %LC 04000 { C-1.A UPNC }

 LC 010 GOSBVL 01EEC
 ?CBIT=1.4 EXIT
 UP
}
%END GAME BACK RPL    
{ GOSBVL $00E0B UPC }
LC 37
D0=00128 DAT0=C.P
%LES INDICATEURS      
D1=0010C A=DAT1.P
ABIT=1.3 DAT1=A.P
%LA MEMOIRE VIDEO     
D0=8068D A=DAT0.A
D0=00120 DAT0=A.A
ST=1.15
LOADRPL

*MARIO
% MARIOçBACK-BUFFER   

D0=(5)MCLIPB C=DAT0.B
RSTK=C

A=0.A B=0.A C=0.A
A=R1.A
D0=(5)MY C=DAT0.B
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.W CSRB.A CSRB.A
A+C.A D0=A
% READ SPRITE 
A=R2.A C=0.A
D1=(5)M.ANIM C=DAT1.B
C+C.A C+C.A A+C.A
% SET CLIP UP   
C=0.A B=0.A
D1=(5) MCLIPH C=DAT1.B
B=C.B CSL.A C+B.A
C+C.A A+C.A D1=A

LC 0B
?B<C.B
{
 GOTO BIG_CLIP 
}
SKELSE
{
 C-B.B B=C.B
}
% SET CLIP DOWN   
C=RSTK

?C<B.B
{
 GOTO BIG_CLIP 
}
SKELSE
{
 B-C.B
}
% AFFICHAGE SPRITE  
{
 A=0.X C=0.X
 D1+2
 A=DAT1.B
 C=D.P
 ?CBIT=1.0 ç { A+A.X }
 ?CBIT=1.1 ç { A+A.X A+A.X }
 A=-A-1.X
 C=DAT0.X
 C&A.X
 RSTK=C
 D1-2
 A=0.X
 A=DAT1.B
 C=D.P
 ?CBIT=1.0 ç { A+A.X }
 ?CBIT=1.1 ç { A+A.X A+A.X }
 C=RSTK
 A!C.X
 DAT0=A.X

 D0+34 D1+34
 B-1.B UPNC
}
*BIG_CLIP
%MOVEMENTS FROM KEYS  
LC 040 GOSBVL 01EEC
?CBIT=0.0
{
 GOSUBL TEST_MURD
 EXITC
 D0=(5)MX A=DAT0.B
 LC 40 ?A<C.B 
 {
  GOSUBL SCROLG
 }
 SKELSE
 {
  A+1.B DAT0=A.B
 }
 % ANIMATION DROITE   
 D0=(5)TICKC A=DAT0.B
 ?A=0.B
 {
  A-1.B DAT0=A.B
 }
 SKELSE
 {
  D1=(5)TICK A=DAT1.B
  DAT0=A.B
  % FRAME 
  D0=(5)M.ANIM A=DAT0.B
  LC 04 ?AäC.B
  { A+1.B }
  SKELSE
  { LA 01}
  DAT0=A.B
 }
}
%TEST GAUCHE          
LC 040 GOSBVL 01EEC
?CBIT=0.2
{
 GOSUBL TEST_MURG
 EXITC
 D0=(5)MX A=DAT0.B
 ?A=0.B EXIT
 A-1.B DAT0=A.B
 % ANIMATION GAUCHE   
 D0=(5)TICKC A=DAT0.B
 ?A=0.B
 {
  A-1.B DAT0=A.B
 }
 SKELSE
 {
  D1=(5)TICK A=DAT1.B
  DAT0=A.B
  % FRAME 
  D0=(5)M.ANIM A=DAT0.B
  LC 01 ?AâC.B
  { A-1.B }
  SKELSE
  { LA 04}
  DAT0=A.B
 }
}
%NO MOVEçSTAND-BY     
GOSBVL 00E0B
SKIPC
{
 A=0.B
 D0=(5)M.ANIM DAT0=A.B
}
% JUMPING 
LC 040 GOSBVL $01EEC
?CBIT=0.4
{
 %DEJA PRESSED 
 ?ST=1.2 EXIT
 ST=1.2
 %DEJA ON AIR  
 ?ST=1.0 EXIT
 GOSUBL TEST_SOL 
 EXITNC
 ST=1.0
 %SAUT OU CHUTE
 ST=1.1
 A=0.B
 D0=(5)JP DAT0=A.B
}
SKELSE
{
 ST=0.2
}
%ON GERE LE SAUT/CHUTE
?ST=1.0
{
 GOSUBL TEST_SOL
 SKIPC
 {
  ST=1.0
  %SAUT OU CHUTE
  ST=0.1
  LA 08
  D0=(5)JP DAT0=A.B
 }
}
SKELSE
{
 GOSUBL JUMPING
}
RTN

*FLIP
%BACK-BUFFYçFRONT-BUFY
A=R1.A
D0=00120 DAT0=A.A
%WAIT VBL
A=0.W P=5
{
 D0=00128 A=DAT0.WP
 ?A=0.W EXIT
 UP
}
P=0
%CLEAR NEW BACK-BUFFY 
D0=(5)LV A=DAT0.A
D1=A A=R0.A D0=A LC 3F
{
 A=DAT1.W DAT0=A.W
 D0+16 D1+16
 A=DAT1.10 DAT0=A.10
 D0+18 D1+18
 C-1.B UPNC
}
%FLIP VIDEO POINTERS  
A=R0.A C=R1.A
R1=A.A R0=C.A
RTN

*JUMPING
%MARIO SE POSE?
?ST=1.1
{
 GOSUBL TEST_SOL
 EXITNC
 ST=0.0
 % REAJUSTE MY
 {
  GOSUBL FIX_SOL
  EXITNC
  D0=(5)MY A=DAT0.B
  A-1.B DAT0=A.B
  UP
 }
 RTN
}
SKELSE
{
%MARIO SE COGNE? 
 GOSUBL TEST_PLAFOND
 EXITNC
 ST=0.0
 % REAJUSTE MY 2
 {
  GOSUBL FIX_PLAFOND
  EXITNC
  D0=(5)MY A=DAT0.B
  A+1.B DAT0=A.B
  UP
 }
 RTN
}
% EQS VALUES 
SKUB
{
 $/05 $/05 $/04
 $/03 $/03 $/02
 $/01 $/01 $/01
 $/00 $/00 $/00
}
C=RSTK A=0.A
D0=(5)JP A=DAT0.B
A+A.A C+A.A D0=C
C=0.A C=DAT0.B
%MOVE SPRITE          
D0=(5)MY A=DAT0.B
?ST=1.1
{
 D=C.B
 D1=(5)MCLIPH C=DAT1.B
 ?C=0.B
 {
  ?C>D.B
  {
   C=0.B DAT1=C.B
   D-C.B C=D.B
   A+C.B DAT0=A.B  
  }
  SKELSE
  {
   C-D.B DAT1=C.B 
  }
 }
 SKELSE
 {
  C=D.B
  A+C.B
 }
}
SKELSE
{
 ?C>A.B
 {
  A-C.B
 }
 SKELSE
 {
  D1=(5)MCLIPH A=DAT1.B
  A+C.B DAT1=A.B
  A=0.B
 }
}
%CLIPPING UP&DOWN 
LC 40 ?AâC.B
{ A=C.B }
LC 34 ?AâC.B
{
 B=C.B C=A.B
 C-B.B
 D1=(5)MCLIPB DAT1=C.B
}
DAT0=A.B
%UPDATE JUMP
D0=(5)JP A=DAT0.B
%SAUT OU CHUTE
?ST=0.1
{
 LC(2)#11 ?AãC.B
 { ST=0.0 }
 SKELSE
 { A+1.B DAT0=A.B }
}
SKELSE
{
 ?A=0.B ç 
 {
  %PAS DE SOL ç CHUTE
  GOSUBL TEST_SOL
  EXITNC
  ST=0.0
  % REAJUSTE MY
  {
   GOSUBL FIX_SOL
   EXITNC
   D0=(5)MY A=DAT0.B
   A-1.B DAT0=A.B
   UP
  }
 }
 SKELSE
 { A-1.B DAT0=A.B }
}
RTN
 
*TEST_SOL
% ON TOMBEçPLUS DE SOL
D0=(5)MCLIPB A=DAT0.B
LC 0B
?AäC.B ç { GOLONG MLOST }
?Aã0.B ç { RTNCC }
D0=(5)MY A=DAT0.B
LC 34
?AäC.B ç { RTNCC }

A=0.A B=0.A C=0.A
% ON LIT DANS LVL     
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
C+12.A %TAILLE MARIO
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE SOL
A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
?Aã0.B { RTNCC } RTNSC

*FIX_SOL
A=0.A B=0.A C=0.A
% ON LIT DS LVL       
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
C+11.A %TAILLE MARIO
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE SOL
A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
?Aã0.B { RTNCC } RTNSC

*MLOST
C=RSTK
GOSUBL FLIP
GOLONG REPLAY

*TEST_MURD
A=0.A B=0.A C=0.A
%LVL         
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
C+8.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE MUR
LC B B=C.P C=D.P
{
 A=DAT0.X
 ?CBIT=1.0 ç { ASRB.X }
 ?CBIT=1.1 ç { ASRB.X ASRB.X }
 ?ABIT=1.0 ç { RTNSC }
 D0+34 B-1.P UPNC
}
RTNCC

*TEST_MURG
A=0.A B=0.A C=0.A
%LVL         
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
C-1.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE MUR
LC B B=C.P C=D.P
{
 A=DAT0.X
 ?CBIT=1.0 ç { ASRB.X }
 ?CBIT=1.1 ç { ASRB.X ASRB.X }
 ?ABIT=1.0 ç { RTNSC }
 D0+34 B-1.P UPNC
}
RTNCC

*TEST_PLAFOND
% çPLUS DE FLAFOND? 
D0=(5)MCLIPH A=DAT0.B
?Aã0.B ç { RTNCC }
D0=(5)MY A=DAT0.B
?A=0.B ç { RTNCC }

A=0.A B=0.A C=0.A
%LVL         
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
C-1.A
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE PLAFOND
A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
?Aã0.B { RTNCC } RTNSC

*FIX_PLAFOND
A=0.A B=0.A C=0.A
%LVL         
D0=(5)LV A=DAT0.A
D0=(5)MY C=DAT0.B
B=C.A CSL.A C+B.A
C+C.A A+C.A C=0.A
D0=(5)MX C=DAT0.B
D=C.P CSRB.A CSRB.A
A+C.A D0=A
%ON REGARDE LE PLAFOND
A=DAT0.X C=D.P
?CBIT=1.0 ç { ASRB.X }
?CBIT=1.1 ç { ASRB.X ASRB.X }
?Aã0.B { RTNCC } RTNSC

*DISP.LEVEL
D0=(5)LV A=DAT0.A
R4=A.A

LC(2)#13 D=C.B % X
LC(2)#08 B=C.B % Y

D0=(5)LV1
A=DAT0.A D0=A
CD0EX RSTK=C D0=C

*BCL

D1=(5)CUBES C=DAT1.A
D1=C C=0.B

{
 A=DAT0.B ?A=C.B EXIT
 C+1.B D1+32 UP
}

A=R4.A D0=A
LC 7
{
 A=DAT1.B DAT0=A.B
 D0+34 D1+4 C-1.P
 UPNC
}

 A=R4.A A+2.A R4=A.A
 C=RSTK C+2.A RSTK=C
 D0=C

D-1.B
?Dã0.B ç
{ GOTO BCL }

LC(2)#13 D=C.B

C=RSTK
LA 00140 C+A.A
C-16.A C-10.A
RSTK=C D0=C

A=R4.A A-16.A A-10.A
LC 00110 A+C.A R4=A.A

B-1.B ?Bã0.B ç { GOTO BCL }
C=RSTK
RTN

*DISP.COL.D
D0=(5)LV A=DAT0.A
A+16.A A+10.A
R4=A.A

LC(2)#08 B=C.B % Y

D0=(5)LV1
A=DAT0.A D0=A
D0+16 D0+10
CD0EX RSTK=C D0=C

*BCL2

D1=(5)CUBES C=DAT1.A
D1=C C=0.B

{
 A=DAT0.B ?A=C.B EXIT
 C+1.B D1+32 UP
}

A=R4.A D0=A
LC 7
{
 A=DAT1.B DAT0=A.B
 D0+34 D1+4 C-1.P
 UPNC
}

C=RSTK
LA 00140 C+A.A
RSTK=C D0=C

A=R4.A
LC 00110 A+C.A
R4=A.A

B-1.B ?B=0.B
{ GOTO BCL2 }

C=RSTK
RTN


*SCROLG
%UN POINTER SUR COLONE
D0=(5)LV A=DAT0.A D0=A
LC 3F
{
 A=DAT0.W ASRB.W DAT0=A.15
 D0+15 A=DAT0.14 ASRB.W
 DAT0=A.13
 D0+19
 C-1.B UPNC
}
%ON COMPTE LES SCROLS 
D0=(5)SCR.C A=DAT0.P
LC 7 ?A=C.P
{
 A+1.P DAT0=A.P
}
SKELSE
{ 
%UNE NOUVELLE COLONNE 
 A=0.P DAT0=A.P
 D0=(5)LV1 A=DAT0.A
 A+2.A DAT0=A.A
 GOSUBL DISP.COL.D
}
RTN

*DISP.PANEL
SKUB {
$EFFFFF30FFFF7F707232E37075BA6560B71A4D60B7DA5D60B7DA5370FFFFFF70EFFFFF30300000609100004010CF0040D1CF0050510C004051070050D1EC085010EC085010C7004030000060EEFFFB3083000E00EFFFFF30FFFDFF70F9DFC970FEA8AE70FEADA870FEADAB70F9D8AC70FFFFFF70EFFFFF303000006010000040D177205051553040D155205010552040D055205010667850D000085030000060EEFFFB3083000E00EFFFFF30FFFFFF70F8D47E7075FAAD70FDDA2C70FDDAAF70F88A6C70FFFFFF70EFFFFF30300000609100004010000040D137204051553050D145205010452040D125205051767850D100004030000060EEFFFB3083000E00
} C=RSTK
D=C.A D1=C
A=R0.A
A+16.A A+10.A D0=A
LC 3F
{
 A=DAT1.8
 DAT0=A.8 D0+34
 D1+8 C-1.B UPNC
}
C=D.A D1=C
A=R1.A
A+16.A A+10.A D0=A
LC 3F
{
 A=DAT1.8
 DAT0=A.8 D0+34
 D1+8 C-1.B UPNC
}
RTN

@